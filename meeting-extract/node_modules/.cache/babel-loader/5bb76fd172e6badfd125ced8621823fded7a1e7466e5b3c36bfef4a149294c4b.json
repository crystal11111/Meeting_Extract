{"ast":null,"code":"var _jsxFileName = \"/Users/crystalcho/Meeting_Extract/meeting-extract/src/pages/Chatbot/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Chatbot.css';\nimport UploadForm from './components/UploadForm';\nimport Summary from './components/Summary';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatBot = () => {\n  _s();\n  const location = useLocation();\n  const {\n    selectedTopic\n  } = location.state || {}; // Get the selected topic from the location state\n\n  const [data, setData] = useState(\"null\");\n  const [loading, setLoading] = useState(false);\n  const askAI = () => {\n    const promptInput = document.getElementById('chat-input');\n    const prompt = promptInput.value;\n    if (prompt.trim() === '') {\n      return;\n    }\n    const requestData = {\n      query: prompt\n    };\n    setLoading(true);\n    let endpoint = \"https://localhost:5000/summary\";\n    fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(resdata => {\n      setData(resdata || null);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: [/*#__PURE__*/_jsxDEV(UploadForm, {\n          onSubmit: handleTranscriptSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"QryMw6lkV4m+x97e3dUq9DS2K/A=\", false, function () {\n  return [useLocation];\n});\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useLocation","UploadForm","Summary","jsxDEV","_jsxDEV","ChatBot","_s","location","selectedTopic","state","data","setData","loading","setLoading","askAI","promptInput","document","getElementById","prompt","value","trim","requestData","query","endpoint","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","resdata","catch","error","console","className","children","onSubmit","handleTranscriptSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/crystalcho/Meeting_Extract/meeting-extract/src/pages/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './Chatbot.css';\nimport UploadForm from './components/UploadForm';\nimport Summary from './components/Summary';\n\nexport const ChatBot = () => {\n    const location = useLocation();\n    const { selectedTopic } = location.state || {}; // Get the selected topic from the location state\n\n    const [data, setData] = useState(\"null\");\n    const [loading, setLoading] = useState(false);\n\n    const askAI = () => {\n        const promptInput = document.getElementById('chat-input');\n        const prompt = promptInput.value;\n\n        if (prompt.trim() === '') {\n            return;\n        }\n\n        const requestData = {\n            query: prompt,\n        };\n\n        setLoading(true);\n        let endpoint = \"https://localhost:5000/summary\";\n\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestData),\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((resdata) => {\n                setData(resdata || null);\n                setLoading(false);\n            })\n            .catch((error) => {\n                console.error(error);\n                setLoading(false);\n            });\n    };\n\n\n    return (\n        <div className=\"chatbot\">\n            <div className='chatbot-container'>\n                <div className='chatbot-header'>\n                    <UploadForm onSubmit={handleTranscriptSubmit} />\n                    <h1>Chatbot</h1>\n                </div>\n            </div>\n        </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,eAAe;AACtB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ;EAAc,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;;EAEhD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMe,KAAK,GAAGA,CAAA,KAAM;IAChB,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC;IACzD,MAAMC,MAAM,GAAGH,WAAW,CAACI,KAAK;IAEhC,IAAID,MAAM,CAACE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtB;IACJ;IAEA,MAAMC,WAAW,GAAG;MAChBC,KAAK,EAAEJ;IACX,CAAC;IAEDL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAIU,QAAQ,GAAG,gCAAgC;IAE/CC,KAAK,CAACD,QAAQ,EAAE;MACZE,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;IACpC,CAAC,CAAC,CACGS,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAClD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAAEK,OAAO,IAAK;MACfxB,OAAO,CAACwB,OAAO,IAAI,IAAI,CAAC;MACxBtB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDuB,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpBxB,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACV,CAAC;EAGD,oBACIT,OAAA;IAAKmC,SAAS,EAAC,SAAS;IAAAC,QAAA,eACpBpC,OAAA;MAAKmC,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAC9BpC,OAAA;QAAKmC,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BpC,OAAA,CAACH,UAAU;UAACwC,QAAQ,EAAEC;QAAuB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChD1C,OAAA;UAAAoC,QAAA,EAAI;QAAO;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAAxC,EAAA,CAxDYD,OAAO;EAAA,QACCL,WAAW;AAAA;AAAA+C,EAAA,GADnB1C,OAAO;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}