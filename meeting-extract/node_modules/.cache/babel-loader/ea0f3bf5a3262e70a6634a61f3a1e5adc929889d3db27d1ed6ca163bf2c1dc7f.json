{"ast":null,"code":"var _jsxFileName = \"/Users/crystalcho/Meeting_Extract/meeting-extract/src/pages/Chatbot/Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatBot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatBot = () => {\n  _s();\n  const location = useLocation();\n  const {\n    selectedTopic\n  } = location.state || {}; // Get the selected topic from the location state\n\n  const [data, setData] = useState(null); // Changed initial value to null\n  const [loading, setLoading] = useState(false);\n  const askAI = () => {\n    const promptInput = document.getElementById('chat-input');\n    const prompt = promptInput.value;\n    if (prompt.trim() === '') {\n      return;\n    }\n    const requestData = {\n      query: prompt\n    };\n    setLoading(true);\n    let endpoint = \"http://localhost:5000/summary\";\n    fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(requestData)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(resdata => {\n      setData(resdata || null);\n      setLoading(false);\n    }).catch(error => {\n      console.error(error);\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"chat-input\",\n        type: \"text\",\n        placeholder: \"Ask a question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: askAI,\n        children: \"Ask AI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }, this), \" \", data && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 26\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBot, \"c69YNjnBtAiGnPav86+EJy4OQZI=\", false, function () {\n  return [useLocation];\n});\n_c = ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","ChatBot","_s","location","selectedTopic","state","data","setData","loading","setLoading","askAI","promptInput","document","getElementById","prompt","value","trim","requestData","query","endpoint","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","json","resdata","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/crystalcho/Meeting_Extract/meeting-extract/src/pages/Chatbot/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport './ChatBot.css';\n\nexport const ChatBot = () => {\n    const location = useLocation();\n    const { selectedTopic } = location.state || {}; // Get the selected topic from the location state\n\n    const [data, setData] = useState(null); // Changed initial value to null\n    const [loading, setLoading] = useState(false);\n\n    const askAI = () => {\n        const promptInput = document.getElementById('chat-input');\n        const prompt = promptInput.value;\n\n        if (prompt.trim() === '') {\n            return;\n        }\n\n        const requestData = {\n            query: prompt,\n        };\n\n        setLoading(true);\n        let endpoint = \"http://localhost:5000/summary\";\n\n        fetch(endpoint, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(requestData),\n        })\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then((resdata) => {\n                setData(resdata || null);\n                setLoading(false);\n            })\n            .catch((error) => {\n                console.error(error);\n                setLoading(false);\n            });\n    };\n\n    return (\n        <div className=\"chatbot\">\n            <div className='chatbot-container'>\n                <div className='chatbot-header'>\n                    <h1>Chatbot</h1>\n                </div>\n                <input\n                    id='chat-input'\n                    type='text'\n                    placeholder='Ask a question...'\n                />\n                <button onClick={askAI}>Ask AI</button>\n                {loading && <p>Loading...</p>} {/* Display loading message */}\n                {data && <p>{data}</p>} {/* Display the response data */}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}