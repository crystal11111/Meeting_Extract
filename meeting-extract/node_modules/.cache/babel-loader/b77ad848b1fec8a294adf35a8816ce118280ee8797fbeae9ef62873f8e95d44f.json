{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = StructTreeItem;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst structTreeUtils_js_1 = require(\"./shared/structTreeUtils.js\");\nfunction StructTreeItem({\n  className,\n  node\n}) {\n  const attributes = (0, react_1.useMemo)(() => (0, structTreeUtils_js_1.getAttributes)(node), [node]);\n  const children = (0, react_1.useMemo)(() => {\n    if (!(0, structTreeUtils_js_1.isStructTreeNode)(node)) {\n      return null;\n    }\n    if ((0, structTreeUtils_js_1.isStructTreeNodeWithOnlyContentChild)(node)) {\n      return null;\n    }\n    return node.children.map((child, index) => {\n      return (\n        // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n        (0, jsx_runtime_1.jsx)(StructTreeItem, {\n          node: child\n        }, index)\n      );\n    });\n  }, [node]);\n  return (0, jsx_runtime_1.jsx)(\"span\", Object.assign({\n    className: className\n  }, attributes, {\n    children: children\n  }));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","StructTreeItem","jsx_runtime_1","require","react_1","structTreeUtils_js_1","className","node","attributes","useMemo","getAttributes","children","isStructTreeNode","isStructTreeNodeWithOnlyContentChild","map","child","index","jsx","assign"],"sources":["/Users/crystalcho/node_modules/react-pdf/dist/cjs/StructTreeItem.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = StructTreeItem;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst structTreeUtils_js_1 = require(\"./shared/structTreeUtils.js\");\nfunction StructTreeItem({ className, node, }) {\n    const attributes = (0, react_1.useMemo)(() => (0, structTreeUtils_js_1.getAttributes)(node), [node]);\n    const children = (0, react_1.useMemo)(() => {\n        if (!(0, structTreeUtils_js_1.isStructTreeNode)(node)) {\n            return null;\n        }\n        if ((0, structTreeUtils_js_1.isStructTreeNodeWithOnlyContentChild)(node)) {\n            return null;\n        }\n        return node.children.map((child, index) => {\n            return (\n            // biome-ignore lint/suspicious/noArrayIndexKey: index is stable here\n            (0, jsx_runtime_1.jsx)(StructTreeItem, { node: child }, index));\n        });\n    }, [node]);\n    return ((0, jsx_runtime_1.jsx)(\"span\", Object.assign({ className: className }, attributes, { children: children })));\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,OAAO,GAAGC,cAAc;AAChC,MAAMC,aAAa,GAAGC,OAAO,CAAC,mBAAmB,CAAC;AAClD,MAAMC,OAAO,GAAGD,OAAO,CAAC,OAAO,CAAC;AAChC,MAAME,oBAAoB,GAAGF,OAAO,CAAC,6BAA6B,CAAC;AACnE,SAASF,cAAcA,CAAC;EAAEK,SAAS;EAAEC;AAAM,CAAC,EAAE;EAC1C,MAAMC,UAAU,GAAG,CAAC,CAAC,EAAEJ,OAAO,CAACK,OAAO,EAAE,MAAM,CAAC,CAAC,EAAEJ,oBAAoB,CAACK,aAAa,EAAEH,IAAI,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EACpG,MAAMI,QAAQ,GAAG,CAAC,CAAC,EAAEP,OAAO,CAACK,OAAO,EAAE,MAAM;IACxC,IAAI,CAAC,CAAC,CAAC,EAAEJ,oBAAoB,CAACO,gBAAgB,EAAEL,IAAI,CAAC,EAAE;MACnD,OAAO,IAAI;IACf;IACA,IAAI,CAAC,CAAC,EAAEF,oBAAoB,CAACQ,oCAAoC,EAAEN,IAAI,CAAC,EAAE;MACtE,OAAO,IAAI;IACf;IACA,OAAOA,IAAI,CAACI,QAAQ,CAACG,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK;MACvC;QACA;QACA,CAAC,CAAC,EAAEd,aAAa,CAACe,GAAG,EAAEhB,cAAc,EAAE;UAAEM,IAAI,EAAEQ;QAAM,CAAC,EAAEC,KAAK;MAAC;IAClE,CAAC,CAAC;EACN,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EACV,OAAQ,CAAC,CAAC,EAAEL,aAAa,CAACe,GAAG,EAAE,MAAM,EAAErB,MAAM,CAACsB,MAAM,CAAC;IAAEZ,SAAS,EAAEA;EAAU,CAAC,EAAEE,UAAU,EAAE;IAAEG,QAAQ,EAAEA;EAAS,CAAC,CAAC,CAAC;AACvH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}